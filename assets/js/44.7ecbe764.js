(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{455:function(s,a,t){"use strict";t.r(a);var n=t(45),r=Object(n.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"运行时数据区域之-java-虚拟机栈"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#运行时数据区域之-java-虚拟机栈"}},[s._v("#")]),s._v(" 运行时数据区域之 - Java 虚拟机栈")]),s._v(" "),t("h2",{attrs:{id:"概述"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[s._v("#")]),s._v(" 概述")]),s._v(" "),t("blockquote",[t("p",[s._v("Java 虚拟机栈： Java Virtual Machine Stack")]),s._v(" "),t("p",[s._v("Java 虚拟机栈和程序计数器一样，也是线程私有的，它的生命周期和线程相同。Java 虚拟机栈描述的是 Java 方法执行的线程内存模型：每个方法被执行的时候，Java 虚拟机都会同步创建一个栈帧用于存储局部变量表、操作数栈、动态链接、方法返回地址等信息。每一个方法被调用直至执行完毕的过程，就对应着一个栈帧在虚拟机栈中从入栈到出栈的过程。")]),s._v(" "),t("p",[s._v("栈是运行时的单位、堆是存储的单位： 即栈解决程序的运行问题、即程序如何执行、或者说数据如何处理。堆解决的是数据存储问题，即数据怎么放，放在哪。")]),s._v(" "),t("p",[s._v("栈是一种快速有效的存储方式，访问速度仅次于程序计数器。JVM 对栈的操作只有两个： 入栈[压栈]（push）、出栈（pop）")]),s._v(" "),t("p",[s._v("Java 虚拟机栈的作用：")]),s._v(" "),t("p",[s._v("主要管 java 程序的运行，它保存方法的局部变量、部分结果、并参与方法的调用和返回")])]),s._v(" "),t("h2",{attrs:{id:"常见异常和设置栈的大小"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#常见异常和设置栈的大小"}},[s._v("#")]),s._v(" 常见异常和设置栈的大小")]),s._v(" "),t("blockquote",[t("p",[s._v("1、在 《Java 虚拟机规范》 中，对 Java 虚拟机栈这个内存区域规定了两种异常：")]),s._v(" "),t("ul",[t("li",[s._v("StackOverflowError 异常")]),s._v(" "),t("li",[s._v("OutOfMemoryError 异常")])]),s._v(" "),t("p",[s._v("2、"),t("code",[s._v("Java 虚拟机规范允许 Java 栈的大小是固定不变的或者是动态扩展的，但是 HotSpot 虚拟机的栈容量不可以动态扩展的")])]),s._v(" "),t("ul",[t("li",[s._v("对于固定大小的 Java 虚拟机栈，如果线程请求的栈深度大于 Java 虚拟机所允许的深度，将抛出 StackOverflowError 异常；【无限递归调用可以看到这个异常】")]),s._v(" "),t("li",[s._v("对于动态扩展的 Java 虚拟机栈，当栈扩展时无法申请到足够的内存或者创建新的线程时没有足够的内存去创建对应的虚拟机栈，将抛出 OutOfMemoryEorr 异常；（"),t("code",[s._v("HotSpot虚拟机的栈容量是不可以动态扩展的，以前的 Classic 虚拟机倒是可以，所以在 HotSpot 虚拟机上是不会由于虚拟机栈无法扩展而导致 OutOfMemoryError 异常的【只要线程申请栈空间成功了就不会有 OOM ，但是如果申请时就失败(不会动态扩展)，仍然会出现 OOM 】")]),s._v("）")])]),s._v(" "),t("p",[s._v("【设置栈内存的大小 -Xss】")]),s._v(" "),t("p",[s._v("官方文档对 -Xss 的描述：")]),s._v(" "),t("p",[s._v("https://docs.oracle.com/javase/8/docs/technotes/tools/windows/java.html#BGBCIEFC")]),s._v(" "),t("p",[s._v("(1) 通过参数 -Xss 可以设置线程的最大栈空间，栈的大小直接决定了方法调用的最大可达深度。")]),s._v(" "),t("hr"),s._v(" "),t("p",[t("strong",[s._v("（1）演示出现 StackOverflowError 的程序")])]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 通过设置 -Xss256k 可以看出不同栈大小, 递归的最大深度不同")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("StackOverflowErrorTest")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n     "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("try")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n          "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("catch")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Exception")]),s._v(" e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n          e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printStackTrace")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("finally")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n          "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"递归调用"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" i"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n     i"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br")])]),t("p",[t("strong",[s._v("（2）演示出现 OutOfMemoryError 的程序")])]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 先将堆空间设置小一点,避免程序运行时间太久, 添加参数： -Xms10m -Xmx10m   ")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("OutOfMemoryErrorTest")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n     "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("List")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Integer")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" list "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ArrayList")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("try")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n          "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n              list"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("i"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n          "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("catch")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Exception")]),s._v(" e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n          e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printStackTrace")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("finally")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n          "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"被调用了"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"次"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br")])])]),s._v(" "),t("h2",{attrs:{id:"栈的基本单位-栈帧"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#栈的基本单位-栈帧"}},[s._v("#")]),s._v(" 栈的基本单位 - 栈帧")]),s._v(" "),t("p",[t("img",{attrs:{src:"/images/jvm/stack-frame.png",alt:"栈帧结构"}})]),s._v(" "),t("blockquote",[t("p",[s._v("每个线程都对应一个Java虚拟机栈。虚拟机栈中的基本存储单位是栈帧（Stack Frame）。Java 虚拟机栈中的数据都是以栈帧的形式存在的，每一个栈帧都对应着 Java 中的一个方法。")]),s._v(" "),t("p",[s._v("每一个方法的调用直至执行完毕的过程，就对应着上图中栈帧在 Java 虚拟机栈中从入栈（push）到出栈（pop）的过程。")])]),s._v(" "),t("h2",{attrs:{id:"栈帧结构之-局部变量表"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#栈帧结构之-局部变量表"}},[s._v("#")]),s._v(" 栈帧结构之 - 局部变量表")]),s._v(" "),t("h3",{attrs:{id:"_1-局部变量表介绍"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-局部变量表介绍"}},[s._v("#")]),s._v(" （1）局部变量表介绍")]),s._v(" "),t("blockquote",[t("p",[s._v("局部变量表（Local Variables Table）： 也可以称为本地变量表或者局部变量数组，它是一组表变量值的存储空间。用于存放"),t("code",[s._v("方法参数")]),s._v("和"),t("code",[s._v("方法内部定义的局部变量")]),s._v("。")]),s._v(" "),t("hr"),s._v(" "),t("p",[s._v("局部变量表的大小是在 java 程序编译成 Class 文件时就被确定了，保存在方法的 Code 属性的 "),t("code",[s._v("maximum local variables 数据项")]),s._v("中。在方法运行期间是不会改变局部变量表的大小的！")])]),s._v(" "),t("h3",{attrs:{id:"_2-如何查看局部变量表"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-如何查看局部变量表"}},[s._v("#")]),s._v(" （2）如何查看局部变量表")]),s._v(" "),t("blockquote",[t("p",[t("strong",[s._v("（1）通过 jclasslib 打开 Class 文件来查看局部变量表：")])]),s._v(" "),t("p",[t("img",{attrs:{src:"/images/jvm/%E6%A0%88%E5%B8%A7%E4%B8%AD%E7%9A%84%E5%B1%80%E9%83%A8%E5%8F%98%E9%87%8F%E8%A1%A81.png",alt:"局部变量表1"}})]),s._v(" "),t("p",[t("img",{attrs:{src:"/images/jvm/%E5%B1%80%E9%83%A8%E5%8F%98%E9%87%8F%E8%A1%A82.png",alt:"局部变量表2"}})]),s._v(" "),t("p",[t("strong",[s._v("（2）通过 javap 命令对 Class 文件进行解析查看局部变量表：")])]),s._v(" "),t("p",[t("code",[s._v("javap -v LocalVariablesTableTest.class")])]),s._v(" "),t("p",[t("img",{attrs:{src:"/images/jvm/%E6%A0%88%E5%B8%A7%E4%B8%AD%E7%9A%84%E5%B1%80%E9%83%A8%E5%8F%98%E9%87%8F%E8%A1%A81.png",alt:"局部变量表1"}})]),s._v(" "),t("p",[t("img",{attrs:{src:"/images/jvm/%E5%B1%80%E9%83%A8%E5%8F%98%E9%87%8F%E8%A1%A83.png",alt:"局部变量表3"}})])]),s._v(" "),t("h3",{attrs:{id:"_3-关于变量槽-slot-的理解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-关于变量槽-slot-的理解"}},[s._v("#")]),s._v(" （3）关于变量槽 Slot 的理解")]),s._v(" "),t("blockquote",[t("p",[s._v("变量槽（Variables Slot）是局部变量表中的基本存储单位。《Java 虚拟机规范》中没有明确规定一个变量槽应该占用的内存空间大小，只是很有向导性地说到了每个变量槽都应该能够存放 byte、char、short、int、float、reference、returnAddress 这 8 种类型的数据。而这 8 种类型的数据都可以使用 "),t("code",[s._v("32 位（4字节）")]),s._v("或者更小的物理内存来存储。")]),s._v(" "),t("ul",[t("li",[s._v("byte、char、short、int、float、reference、returnAddress 类型的数据在局部变量表中占用一个 Slot")]),s._v(" "),t("li",[s._v("long、double 这两种类型的数据在局部变量表中占用 2 个 Slot")])]),s._v(" "),t("p",[t("img",{attrs:{src:"/images/jvm/Slot1.png",alt:"slot1"}})]),s._v(" "),t("p",[t("img",{attrs:{src:"/images/jvm/Slot2.png",alt:"Slot2"}})]),s._v(" "),t("hr"),s._v(" "),t("p",[t("strong",[s._v("1、静态方法和实例方法对应局部变量表中的 Slot 的一点区别：")])]),s._v(" "),t("p",[s._v("实例方法和构造器方法对应的栈帧的局部变量表的索引 0 位置的变量槽默认是 this（当前方法所属对象实例的引用）")]),s._v(" "),t("p",[t("img",{attrs:{src:"/images/jvm/%E9%9D%99%E6%80%81%E6%96%B9%E6%B3%95%E5%92%8C%E9%9D%9E%E9%9D%99%E6%80%81%E6%96%B9%E6%B3%95%E7%9A%84slot1.png",alt:"静态方法和非静态方法的slot1"}})]),s._v(" "),t("p",[t("img",{attrs:{src:"/images/jvm/%E9%9D%99%E6%80%81%E6%96%B9%E6%B3%95%E5%92%8C%E9%9D%9E%E9%9D%99%E6%80%81%E6%96%B9%E6%B3%95%E7%9A%84slot2.png",alt:"静态方法和非静态方法的slot2"}})]),s._v(" "),t("p",[t("img",{attrs:{src:"/images/jvm/%E9%9D%99%E6%80%81%E6%96%B9%E6%B3%95%E5%92%8C%E9%9D%9E%E9%9D%99%E6%80%81%E6%96%B9%E6%B3%95%E7%9A%84slot3.png",alt:"静态方法和非静态方法的slot3"}})]),s._v(" "),t("p",[t("code",[s._v("所以这也就解释了为什么在静态方法中不能使用 this： 因为 this 这个变量不存在于当前方法的局部变量表中")])]),s._v(" "),t("hr"),s._v(" "),t("p",[t("strong",[s._v("2、局部变量表中的变量槽的重复利用")])]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果一个局部变量过了其作用域, 那么在其作用域之后声明的新的局部变量很有可能复用过期局部变量的槽位, // 从而达到节省资源的目的。 ")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("LocalVariablesTableTest")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("method1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n     "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" a "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n     "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n         "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" b "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n         b "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" a "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n     "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n     "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" c "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br")])]),t("p",[t("strong",[s._v("3、静态变量和局部变量的对比：")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("首先回顾一下 Java 中变量的分类：\n\n(1) 按照变量的数据类型分类\n  - 基本数据类型变量\n\t- 引用数据类型变量\n\n(2) 按照变量在类中的位置分类：\n\t - 成员变量： 使用前可以不用显示初始化, 会有默认初始化\n\t \t\t- 类变量(也称为静态变量)\n\t \t\t\t- 在类加载的 linking 阶段中的 prepare 阶段会对其默认初始化\n\t\t\t\t- 在初始化阶段会对其进行显示初始化(包括代码中静态变量的赋值和静态代码块中的赋值)\n\t \t\t- 实例变量\n\t \t\t\t- 会随着对象的创建，在堆空间分配实例变量的空间，并进行默认赋值\n\t - 局部变量： 使用前必须显示初始化，否则编译不通过\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br")])])]),s._v(" "),t("h2",{attrs:{id:"栈帧结构之-操作数栈"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#栈帧结构之-操作数栈"}},[s._v("#")]),s._v(" 栈帧结构之 - 操作数栈")]),s._v(" "),t("h3",{attrs:{id:"_1-操作数栈简介"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-操作数栈简介"}},[s._v("#")]),s._v(" （1）操作数栈简介")]),s._v(" "),t("blockquote",[t("p",[s._v("操作数栈（Operand Stack）： 也可以成为操作栈，顾名思义，它是一个"),t("code",[s._v("先进后出")]),s._v("的结构。和局部变量表一样，操作数栈的最大深度也是在编译的时候被写入到 Code 属性的 max_stacks 数据项中。32位数据类型所占的栈容量为1，64位数据类型所占的栈容量为2。")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("OperandStackTest")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("test1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" j "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" k "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" j"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("p",[s._v("上面的代码经过编译后生成字节码文件，然后通过 "),t("code",[s._v("javap -verbose OperandStackTest.class")]),s._v(" 解析：")]),s._v(" "),t("p",[t("img",{attrs:{src:"/images/jvm/%E6%93%8D%E4%BD%9C%E6%95%B0%E6%A0%88%E6%9C%80%E5%A4%A7%E6%B7%B1%E5%BA%A6%E5%92%8C%E5%B1%80%E9%83%A8%E5%8F%98%E9%87%8F%E8%A1%A8%E6%9C%80%E5%A4%A7%E9%95%BF%E5%BA%A6.png",alt:"数据项"}})]),s._v(" "),t("hr"),s._v(" "),t("p",[s._v("Java 虚拟机的解释引擎被称为"),t("code",[s._v("基于栈的执行引擎")]),s._v("，其中的栈就是指操作数栈。")]),s._v(" "),t("p",[s._v("操作数栈，在方法执行的过程中，根据字节码指令，往栈中写入数据或者提取数据，即入栈/出栈")])]),s._v(" "),t("h2",{attrs:{id:"栈帧结构之-动态连接"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#栈帧结构之-动态连接"}},[s._v("#")]),s._v(" 栈帧结构之 - 动态连接")]),s._v(" "),t("blockquote",[t("p",[s._v("每一个栈帧内部都包含了一个指向"),t("code",[s._v("运行时常量池中``该栈帧所属方法的引用")]),s._v("。包含这个引用的目的是为了支持当前方法的代码能够支持方法调用过程中的动态连接。")]),s._v(" "),t("p",[s._v("在 Java 文件编译到字节码文件中时，所有的变量和方法引用都作为符号引用。保存在 class 文件的常量池中。比如：描述一个方法调用了另外的其他方法，就是通过常量池中指向方法的符号引用来表示的，")]),s._v(" "),t("p",[s._v("而"),t("code",[s._v("动态连接的目的就是为了将这些符号引用转换为调用方法的直接引用。")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("为什么需要常量池？\t常量池的作用，就是为了提供一些符号和常量，便于指令的识别\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("img",{attrs:{src:"/images/jvm/dynamic-linking.png",alt:"动态连接"}})])]),s._v(" "),t("h2",{attrs:{id:"栈帧结构之-方法返回地址"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#栈帧结构之-方法返回地址"}},[s._v("#")]),s._v(" 栈帧结构之 - 方法返回地址")]),s._v(" "),t("blockquote",[t("p",[s._v("当一个方法开始执行后，只有两种方式退出这个方法：（1）正常执行结束（2）出现未处理的异常")]),s._v(" "),t("p",[s._v("无论采用何种退出方法，在方法退出之后，都必须返回到最初方法被调用时的位置，程序才能继续执行。")]),s._v(" "),t("ul",[t("li",[s._v("方法正常退出时：主调方法的程序计数器的值会作为返回地址，即调用该方法的指令的下一条指令地址。")]),s._v(" "),t("li",[s._v("方法异常： 方法返回地址是要通过异常处表来确定的，栈帧中一般不会保存这部分信息。")])])]),s._v(" "),t("h2",{attrs:{id:"栈帧结构之-附加信息"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#栈帧结构之-附加信息"}},[s._v("#")]),s._v(" 栈帧结构之 - 附加信息")]),s._v(" "),t("blockquote",[t("p",[s._v("《Java 虚拟机规范》中允许虚拟机实现增加一些规范里没有描述的信息到栈帧之中，例如与调试、性能收集相关的信息，这部分信息完全取决于具体的虚拟机实现。")])])])}),[],!1,null,null,null);a.default=r.exports}}]);