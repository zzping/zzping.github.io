(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{440:function(t,v,_){"use strict";_.r(v);var a=_(45),e=Object(a.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"垃圾回收概述"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#垃圾回收概述"}},[t._v("#")]),t._v(" 垃圾回收概述")]),t._v(" "),_("p",[t._v("垃圾收集（Garbage Collection，简称 GC），并不是 java 语言的产物， 早在 1960 年，第一门开始使用内存动态分配和垃圾收集技术的 Lisp 语言诞生。 垃圾收集要考虑的三个经典问题：")]),t._v(" "),_("p",[t._v("（1）哪些内存需要回收")]),t._v(" "),_("p",[t._v("（2） 什么时候回收")]),t._v(" "),_("p",[t._v("（3） 如何回收")]),t._v(" "),_("p",[t._v("什么是垃圾？")]),t._v(" "),_("p",[t._v("垃圾是指在程序运行过程中没有任何指针（引用）指向的对象，这个对象就是需要被回收的垃圾。")]),t._v(" "),_("p",[t._v("为什么需要进行垃圾回收/GC？")]),t._v(" "),_("p",[t._v("如果不进行垃圾回收，内存迟早都会被消耗完，因为不断地分配内存空间而不进行回收。")]),t._v(" "),_("blockquote",[_("p",[t._v("我们知道 Java 是自动进行内存管理（自动分配、自动回收），相比于 C/C++ 这种需要开发人员手动分配和回收内存。Java 的自动内存管理将开发人员从繁琐的内存管理工作中解放了出来，可以更加关注业务逻辑的开发，带来了开发上的便利。")]),t._v(" "),_("hr"),t._v(" "),_("p",[t._v("而到现在，经历了半个多世纪的发展，今天的内存动态分配和内存回收技术已经相当成熟。这种自动管理内存的思想已经成为了现代开发语言的标配。")])])])}),[],!1,null,null,null);v.default=e.exports}}]);