(window.webpackJsonp=window.webpackJsonp||[]).push([[53],{454:function(t,a,v){"use strict";v.r(a);var e=v(45),s=Object(e.a)({},(function(){var t=this,a=t.$createElement,v=t._self._c||a;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"运行时数据区域概述"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#运行时数据区域概述"}},[t._v("#")]),t._v(" 运行时数据区域概述")]),t._v(" "),v("p",[t._v("Java 虚拟机在执行 Java 程序的过程中会把它管理的内存划分为若干个不同的数据区域。这些区域有各自的用途，以及创建和销毁时间，有的区域随着虚拟机进程的启动而一直存在，有的区域则是依赖用户线程的启动和结束而建立和销毁。根据 《Java 虚拟机规范》的规定，Java 虚拟机所管理的内存将会包括以下几个运行时数据区域。")]),t._v(" "),v("blockquote",[v("p",[t._v("程序计数器、Java 虚拟机栈、本地方法栈、Java 堆、方法区")]),t._v(" "),v("p",[t._v("每个 JVM 只有一个 Runtime 实例。即运行时环境， Runtime 类对应着 JVM 整体结构中的中间那层 “运行时数据区域”。")])]),t._v(" "),v("p",[v("img",{attrs:{src:"/images/jvm/structure.jpg",alt:"运行时数据区域"}})]),t._v(" "),v("p",[v("strong",[t._v("JVM 中的线程说明")]),t._v("：")]),t._v(" "),v("blockquote",[v("p",[t._v("线程说明：")]),t._v(" "),v("p",[t._v("在 HotSpot JVM 里，每个线程都与操作系统的本地线程直接映射。当一个 Java 线程准备好执行好，此时一个操作系统的本地线程也会同时创建好。Java 线程终止后，本地线程也会回收。")]),t._v(" "),v("p",[t._v("Java 线程终止以后，操作系统对应的本地线程还要做一个事情：来决定 JVM 要不要终止，看当前线程是不是最后一个非守护线程，如果是则 JVM 也会退出。")]),t._v(" "),v("p",[t._v("线程分为： 守护线程、普通线程（非守护线程）")])])])}),[],!1,null,null,null);a.default=s.exports}}]);