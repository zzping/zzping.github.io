(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{413:function(t,a,s){"use strict";s.r(a);var n=s(45),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"docker-数据持久化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#docker-数据持久化"}},[t._v("#")]),t._v(" Docker 数据持久化")]),t._v(" "),s("p",[t._v("官方文档： "),s("a",{attrs:{href:"https://docs.docker.com/storage/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Manage application data"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("Docker 提供了三种方式实现数据的持久化（即数据不会随着容器 Container 的结束而结束）")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("Volumes (数据卷)")])]),t._v(" "),s("li",[s("strong",[t._v("Bind mounts (绑定挂载)")])]),t._v(" "),s("li",[s("strong",[t._v("tmpfs mounts")])])]),t._v(" "),s("p",[s("img",{attrs:{src:"/images/docker/12-%E4%B8%89%E7%A7%8D%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96%E6%96%B9%E5%BC%8F%E7%9A%84%E5%8C%BA%E5%88%AB.png",alt:"三种方式的区别"}})]),t._v(" "),s("h2",{attrs:{id:"volumes-数据卷"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#volumes-数据卷"}},[t._v("#")]),t._v(" Volumes（数据卷）")]),t._v(" "),s("h3",{attrs:{id:"数据卷简介"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据卷简介"}},[t._v("#")]),t._v(" 数据卷简介")]),t._v(" "),s("p",[t._v("数据卷是一个可供一个或多个容器使用的特殊目录，它的作用是实现容器与宿主机之间的数据共享，从而完成数据的持久化。它有可以提供很多有用的特性：")]),t._v(" "),s("ul",[s("li",[t._v("数据卷可以在容器之间共享和重用")]),t._v(" "),s("li",[t._v("对数据卷的修改会立马生效")]),t._v(" "),s("li",[t._v("对数据卷的更新，不会影响镜像")]),t._v(" "),s("li",[t._v("数据卷默认会一直存在，即使容器被删除")])]),t._v(" "),s("p",[s("strong",[t._v("数据卷是由 Docker 创建和管理的")]),t._v("。")]),t._v(" "),s("h3",{attrs:{id:"数据卷相关命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据卷相关命令"}},[t._v("#")]),t._v(" 数据卷相关命令")]),t._v(" "),s("p",[t._v("Docker 在 1.9 版本就引入了 "),s("code",[t._v("docker volume")]),t._v(" 命令以及一系列子命令用于管理 docker 的数据卷")]),t._v(" "),s("blockquote",[s("div",{staticClass:"language-markdown line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-markdown"}},[s("code",[t._v("查看所有数据卷\t\t\n\tdocker volume ls\n创建数据卷  \t\t\n\tdocker volume create\n查看数据卷细节\t\t\n\tdocker volume inspect\n删除数据卷\n\tdocker volume rm\n移除未使用的数据卷\n\tdocker volume prune\n\ndocker 的数据卷默认位于： /var/lib/docker/volumes\t\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br")])])]),t._v(" "),s("h3",{attrs:{id:"数据卷的使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据卷的使用"}},[t._v("#")]),t._v(" 数据卷的使用")]),t._v(" "),s("p",[t._v("1、先创建数据卷，然后 docker run 的时候指定创建的数据卷")]),t._v(" "),s("div",{staticClass:"language-markdown line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-markdown"}},[s("code",[s("span",{pre:!0,attrs:{class:"token title important"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("##")]),t._v(" 创建数据卷，名称为 tomcat_data01， 默认位置在宿主机的 /var/lib/docker/volumes 目录下")]),t._v("\ndocker volume create tomcat_data01\n\n"),s("span",{pre:!0,attrs:{class:"token title important"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("##")]),t._v(" 查看一下所有的数据卷")]),t._v("\ndocker volume ls\n\n"),s("span",{pre:!0,attrs:{class:"token title important"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("##")]),t._v(" 运行一个 tomcat 容器，并将数据挂载到数据卷 tomcat_data01")]),t._v("\ndocker run -p 8081:8080 -v tomcat_data01:/usr/local/tomcat/webapps --name tomcat01 -d tomcat:8.0.52\n\n"),s("span",{pre:!0,attrs:{class:"token title important"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("##")]),t._v(" 查看数据卷 tomcat_01 细节")]),t._v('\ndocker volume inspect tomcat_data01\n[\n    {\n        "CreatedAt": "2021-01-30T09:53:44+08:00",\n        "Driver": "local",\n        "Labels": {},\n        "Mountpoint": "/var/lib/docker/volumes/tomcat_data01/_data",\n        "Name": "tomcat_data01",\n        "Options": {},\n        "Scope": "local"\n    }\n]\n\n')])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br")])]),s("p",[t._v("2、不创建数据卷，直接在 docker run 的时候指定数据卷")]),t._v(" "),s("div",{staticClass:"language-markdown line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-markdown"}},[s("code",[s("span",{pre:!0,attrs:{class:"token title important"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("##")]),t._v(" 直接启动一个 tomcat 容器，并将数据挂载到 tomcat_data02 这个数据卷（该数据卷并没有先创建）")]),t._v("\ndocker run -p 8082:8080 -v tomcat_data02:/usr/local/tomcat/webapps --name tomcat02 -d tomcat:8.0.52\n\n"),s("span",{pre:!0,attrs:{class:"token title important"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("##")]),t._v(" docker 会自动帮我们创建一个名为 tomcat_data02 的数据卷，然后在进行数据挂载")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("p",[t._v("3、随机 ID 的数据卷")]),t._v(" "),s("div",{staticClass:"language-markdown line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-markdown"}},[s("code",[s("span",{pre:!0,attrs:{class:"token title important"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("##")]),t._v(" 直接不指定数据卷，这种情况 docker 会自动生成一个匿名的数据卷")]),t._v("\ndocker run -p 8081:8080 -v tomcat_data01:/usr/local/tomcat/webapps --name tomcat02 -d tomcat:8.0.52\n\n"),s("span",{pre:!0,attrs:{class:"token title important"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("##")]),t._v(" 查看 docker 生成的匿名的数据库")]),t._v("\n[root@centos7 _data]# docker volume ls\nDRIVER              VOLUME NAME\nlocal               f5a51b83e072b9f9b3f1469be717e928810de2be04b027d7786f20b7dd263ac3\nlocal               tomcat_data01\nlocal               tomcat_data02\n\n"),s("span",{pre:!0,attrs:{class:"token title important"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("##")]),t._v(" 可以看到，f5a51 开头的数据卷就是 docker 自动创建的，并随机生成的这个名称")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br")])]),s("h3",{attrs:{id:"数据卷的细节深入"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据卷的细节深入"}},[t._v("#")]),t._v(" 数据卷的细节深入")]),t._v(" "),s("blockquote",[s("p",[t._v("ro 表示只读，")]),t._v(" "),s("p",[t._v("宿主机的修改会影响到容器，而容器内是只读的，无法修改")])]),t._v(" "),s("h2",{attrs:{id:"bind-mounts-绑定挂载"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#bind-mounts-绑定挂载"}},[t._v("#")]),t._v(" Bind mounts（绑定挂载）")]),t._v(" "),s("h3",{attrs:{id:"bind-mounts-简介"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#bind-mounts-简介"}},[t._v("#")]),t._v(" Bind mounts 简介")]),t._v(" "),s("p",[s("code",[t._v("Bind mounts")]),t._v(" 是指通过直接指定宿主机路径和容器内的路径进行数据挂载。")]),t._v(" "),s("div",{staticClass:"language-markdown line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-markdown"}},[s("code",[s("span",{pre:!0,attrs:{class:"token title important"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("##")]),t._v(" 注意: 前面是宿主机的目录或者文件，必须要使用绝对路径。该目录或者文件如果不存在会自动创建")]),t._v("\n-v /path/to/data:/usr/local/data\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("这种方式意味着让我们自定义数据持久化的存储位置，可以存储在宿主机系统的任意位置。但是，bind mount 在不同的宿主机系统时不可移植的，比如 Windows 和 Linux 的目录结构是不一样的，bind mount 所指向的 host 目录也不能一样。这也是为什么 bind mount 不能出现在 Dockerfile 中的原因，因为这样 Dockerfile 就不可移植了。")]),t._v(" "),s("h3",{attrs:{id:"bind-mounts-使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#bind-mounts-使用"}},[t._v("#")]),t._v(" Bind mounts 使用")]),t._v(" "),s("div",{staticClass:"language-markdown line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-markdown"}},[s("code",[s("span",{pre:!0,attrs:{class:"token title important"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("##")]),t._v(" 启动一个 tomcat 容器，并将容器内的 webapps 目录挂载到 /mydata/tomcat01 目录下")]),t._v("\ndocker run -p 8081:8080 -v /mydata/tomcat01:/usr/local/tomcat/webapps --name tomcat01 -d tomcat:8.0.52\n\n"),s("span",{pre:!0,attrs:{class:"token title important"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("##")]),t._v(" 注意事项【☆☆☆☆☆】")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token code-snippet code keyword"}},[t._v("`(1) /mydata/tomcat01 在宿主机中不用存在，会自动创建`")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token code-snippet code keyword"}},[t._v("`(2) 这种方法进行数据持久化如果容器内的目录本身有数据，则会被隐藏，以保持和宿主机目录内容一致`")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token code-snippet code keyword"}},[t._v("`(3) 如果宿主机目录有文件，容器内目录也有文件，则会先隐藏容器中目录下的文件，然后再和宿主机目录保持一致`")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token title important"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("##")]),t._v(" 启动一个 tomcat 容器，并将容器内的 /usr/local/tomat/RUNNING.txt 映射到宿主机的 /mydata/tomcat 目录下")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br")])]),s("h3",{attrs:{id:"tmpfs-mounts"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tmpfs-mounts"}},[t._v("#")]),t._v(" tmpfs mounts")]),t._v(" "),s("blockquote",[s("p",[t._v("Volumes 和  Bind mounts 使您可以在主机和容器之间共享文件，以便即使容器停止后也可以保留数据。")]),t._v(" "),s("p",[t._v("如果在 Linux 上运行 Docker，则还有第三种选择：tmpfs 挂载。 与 Volumes 和 Bind mounts 相反，tmpfs 挂载是临时的，并且仅保留在主机内存中。 当容器停止时，tmpfs 挂载将被删除，并且在其中写入的文件将不会保留。所以一般很少用这种方式。")])]),t._v(" "),s("h2",{attrs:{id:"总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),s("p",[t._v("其他： 使用数据卷除了 -v 还可以使用 -- mount，详细用法参见 "),s("a",{attrs:{href:"https://docs.docker.com/storage/volumes/#choose-the--v-or---mount-flag",target:"_blank",rel:"noopener noreferrer"}},[t._v("官方文档说明"),s("OutboundLink")],1)]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("Named Volumes")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("Bind Mounts")]),t._v(" "),s("th")])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("Host Location")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Docker chooses")]),t._v(" "),s("td",[t._v("You control")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("Mount Example (using "),s("code",[t._v("-v")]),t._v(")")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("my-volume:/usr/local/data")]),t._v(" "),s("td",[t._v("/path/to/data:/usr/local/data")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("Populates new volume with container contents")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Yes")]),t._v(" "),s("td",[t._v("No")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("Supports Volume Drivers")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("Yes")]),t._v(" "),s("td",[t._v("No")])])])]),t._v(" "),s("p",[s("code",[t._v("对比 Volumes 和 Bind mounts 两种方式，更推荐使用 Volumes (数据卷)这种方式。")])])])}),[],!1,null,null,null);a.default=e.exports}}]);